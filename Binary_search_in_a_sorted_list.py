# Бинарный поиск в отсортированном списке

# задаем отсортированный список
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
       11, 12, 13, 14, 15, 16, 17, 18,
       19, 20, 21, 22, 23, 24, 25, 26,
       27, 28, 29, 30, 31, 32, 33, 34,
       35, 36, 37, 38, 39, 40, 41, 42]

def binary_search(arr, target):

    # Задаем начальные значения left и right для определения диапазона поиска: left устанавливаем в 0, а right в последний индекс списка
    left, right = 0, len(arr) - 1
    while left <= right: # Входим в цикл while, который выполняется до тех пор, пока left не станет больше right
        mid = left + (right - left) // 2 # вычисляем индекс mid как среднее значение между left и right

        if arr[mid] == target: # Сравниваем значение элемента в позиции mid с целевым значением. Если они равны, то нашли искомый элемент и возвращаем индекс mid
            return mid
        elif arr[mid] < target:# Если значение элемента в позиции mid меньше целевого значения, сдвигаем left на mid + 1, чтобы продолжить поиск в правой половине списка
            left = mid + 1
        else:
            right = mid - 1 # Если значение элемента в позиции mid больше целевого значения, сдвигаем right на mid - 1, чтобы продолжить поиск в левой половине списка.

    return - 1 # Если не нашли элемент после завершения цикла, возвращаем -1, чтобы указать, что элемент не найден.

print(binary_search(arr, 40)) # вывод на печать



